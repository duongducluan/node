{"ast":null,"code":"var _jsxFileName = \"D:\\\\trainning react\\\\lesson17-app-oclock\\\\my-app\\\\src\\\\components\\\\CartItem\\\\ItemCart2.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeProduct, count } from './../../actions/index';\nimport $ from 'jquery';\n\nclass ItemCart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.removeItem = id => {\n      this.props.removeItem(id);\n    };\n\n    this.onChange = event => {\n      console.log(ok);\n      $('.input').keypress(event => {\n        if (event.keyCode == 13 || event.which == 13) {\n          console.log(event.target.value);\n          this.props.counts(event.target.value);\n        }\n      });\n    };\n  }\n\n  render() {\n    var {\n      count\n    } = this.props;\n    console.log(count);\n    var {\n      stt\n    } = this.props;\n    var {\n      name\n    } = this.props;\n    var {\n      img\n    } = this.props;\n    var {\n      price\n    } = this.props;\n    var {\n      id\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, stt), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"img\", {\n      src: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"\",\n      className: \"input\",\n      type: \"text\",\n      value: count,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, price, \"(VN\\u0110)\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, count * price), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.removeItem(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"X\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeItem: id => {\n      dispatch(removeProduct(id));\n    },\n    counts: value => {\n      dispatch(count(value));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks,\n    count: state.count\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemCart);","map":{"version":3,"sources":["D:/trainning react/lesson17-app-oclock/my-app/src/components/CartItem/ItemCart2.js"],"names":["React","Component","connect","removeProduct","count","$","ItemCart","removeItem","id","props","onChange","event","console","log","ok","keypress","keyCode","which","target","value","counts","render","stt","name","img","price","mapDispatchToProps","dispatch","mapStateToProps","state","tasks"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeProduct,count } from './../../actions/index';\r\nimport $ from 'jquery';\r\nclass ItemCart extends Component {\r\n    removeItem = (id) => {\r\n            this.props.removeItem(id)\r\n    }\r\n    onChange = (event) => {\r\n        console.log(ok)\r\n        $('.input').keypress( (event)=> {\r\n            if (event.keyCode == 13 || event.which == 13) {\r\n                console.log(event.target.value)\r\n                this.props.counts(event.target.value)    \r\n            }   \r\n        });    \r\n    }\r\n    render() {\r\n        var {count}=this.props\r\n        console.log(count)\r\n        var { stt } = this.props\r\n        var { name } = this.props\r\n        var { img } = this.props\r\n        var { price } = this.props\r\n        var { id } = this.props\r\n        return (\r\n            <tr>\r\n                <th>{stt}</th>\r\n                <th>\r\n                    <div>{name}</div>\r\n                    <img src={img} />\r\n                </th>\r\n                <th>\r\n                    <input name=\"\"\r\n                        className=\"input\"\r\n                        type=\"text\"\r\n                        value={count}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </th>\r\n                <th>{price}(VNƒê)</th>\r\n                <th>{count*price}</th>\r\n                <th>\r\n                    <div onClick={() => this.removeItem(id)}>X</div></th>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeItem: (id) => {\r\n            dispatch(removeProduct(id))\r\n        },\r\n        counts: (value) => {\r\n            dispatch(count(value))\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.tasks,\r\n        count:state.count\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemCart);\r\n"]},"metadata":{},"sourceType":"module"}